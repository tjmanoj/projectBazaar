rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isOnlyUpdatingPaymentFields(data) {
      let paymentFields = ['razorpayOrderId', 'razorpayPaymentId', 'paymentStatus', 'lastPurchasedAt', 'purchasedBy', 'updatedAt'];
      return data.diff(resource.data).affectedKeys().hasOnly(paymentFields);
    }
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /projects/{projectId} {
      allow read: if true;
      allow write: if isAdmin();
      allow update: if request.auth != null && 
        isOnlyUpdatingPaymentFields(request.resource.data);
    }
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && request.auth.uid == userId;
      allow write: if isAdmin();
    }
    match /orders/{orderId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow read, write: if isAdmin();
    }
    match /chats/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read, write: if isAdmin();
      match /messages/{messageId} {
        // Allow user to update 'read' field on admin messages only
        allow update: if request.auth != null
          && request.auth.uid == userId
          && resource.data.sender == 'admin'
          && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['read']);
        // Allow user to edit their own message (text/lastEdited) within 1 hour
        allow update: if request.auth != null
          && resource.data.sender == 'user'
          && request.auth.uid == userId
          && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['text', 'lastEdited'])
          && (request.time.toMillis() - resource.data.timestamp.toMillis() <= 60 * 60 * 1000);
        // Allow user to delete their own message
        allow delete: if request.auth != null
          && resource.data.sender == 'user'
          && request.auth.uid == userId;
        // Allow admin to edit their own message (text/lastEdited) within 1 hour
        allow update: if isAdmin()
          && resource.data.sender == 'admin'
          && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['text', 'lastEdited'])
          && (request.time.toMillis() - resource.data.timestamp.toMillis() <= 60 * 60 * 1000);
        // Allow admin to delete their own message
        allow delete: if isAdmin() && resource.data.sender == 'admin';
        allow read, write: if request.auth != null && request.auth.uid == userId;
        allow read, write: if isAdmin();
      }
    }
    // Admin notifications - users can create, admins can read/write
    match /admin_notifications/{notifId} {
      allow read, write, delete: if isAdmin();
      allow create: if request.auth != null;
    }
  }
}